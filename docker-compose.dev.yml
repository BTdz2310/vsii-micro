version: '3.8'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: "zookeeper"
    ports:
    - 2181:2181
    # volumes:
    # - ./zookeeper:/var/lib/zookeeper
    networks:
      - kafka_network
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:latest
    container_name: "kafka"
    ports:
      - 9092:9092
    # volumes:
    # - ./kafka:/opt/bitnami/kafka
    restart: unless-stopped
    depends_on:
    - zookeeper
    environment:
    - KAFKA_BROKER_ID=1
    - KAFKA_LISTENERS=PLAINTEXT://:9092
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    - KAFKA_RESTART_ATTEMPTS=10
    - KAFKA_RESTART_DELAY=5
    # - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=0
    networks:
      - kafka_network

  postgis-article:
    image: postgres:latest
    container_name: article-postgresql
    environment:
      POSTGRES_DB: article_db
      POSTGRES_USER: article_user
      POSTGRES_PASSWORD: article_pass
    ports:
      - "5434:5432"
    volumes:
      - article_service:/var/lib/postgresql/data
    restart: "no"
    networks:
      - default

  postgis-auth:
    image: postgres:latest
    container_name: auth-postgresql
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_pass
    ports:
      - "5433:5432"
    # expose:
    #   - "5432"
    volumes:
      - auth_service:/var/lib/postgresql/data
    restart: "no"
    networks:
      - default

  postgis-user:
    image: postgres:latest
    container_name: user-postgresql
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_pass
    ports:
      - "5432:5432"
    volumes:
      - user_service:/var/lib/postgresql/data
    restart: "no"
    networks:
      - default

volumes:
  article_service:
  auth_service:
  user_service:

networks:
  kafka_network:
    external: true